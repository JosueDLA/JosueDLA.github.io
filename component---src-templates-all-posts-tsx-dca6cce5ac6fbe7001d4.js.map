{"version":3,"file":"component---src-templates-all-posts-tsx-dca6cce5ac6fbe7001d4.js","mappings":"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","sources":["webpack://josuedla/./src/components/Blog/PostCard.tsx","webpack://josuedla/./src/templates/AllPosts.tsx"],"sourcesContent":["import styled from \"styled-components\";\r\n\r\nexport const PostCardWrapper = styled.article`\r\n  display: grid;\r\n  padding: 2rem 0;\r\n  align-items: center;\r\n  grid-auto-rows: 1fr;\r\n  gap: 2rem;\r\n  width: 80%;\r\n  align-self: center;\r\n\r\n  @media screen and (${({ theme }) => theme.media.large}) {\r\n    width: 100%;\r\n  }\r\n`;\r\n\r\nexport const ImageWrapper = styled.div`\r\n  position: relative;\r\n  flex-basis: 40%;\r\n  overflow: hidden;\r\n  display: flex;\r\n\r\n  @media screen and (${({ theme }) => theme.media.medium}) {\r\n    flex-basis: 15rem;\r\n    display: none;\r\n  }\r\n\r\n  .post-img {\r\n    top: 0;\r\n    right: 0;\r\n    position: absolute;\r\n    min-width: 100%;\r\n    background-color: rgba(0, 0, 0, 0.5);-\r\n  }\r\n`;\r\n\r\nexport const DescriptionWrapper = styled.div`\r\n  flex-basis: 60%;\r\n  position: relative;\r\n  margin: 0 2rem;\r\n\r\n  &:before {\r\n    content: \"\";\r\n    margin-left: -2rem;\r\n    transform: skewX(-3deg);\r\n    background: var(--bg-tertiary);\r\n    width: 2rem;\r\n    position: absolute;\r\n    left: -10px;\r\n    top: 0;\r\n    bottom: -1px;\r\n  }\r\n\r\n  .post-link {\r\n    text-align: right;\r\n    color: var(--accent-primary);\r\n    display: inline-block;\r\n    position: absolute;\r\n    text-decoration: underline;\r\n    cursor: pointer;\r\n    padding-bottom: 1rem;\r\n    right: 0;\r\n    bottom: 0;\r\n  }\r\n`;\r\n\r\nexport const PostTitle = styled.h2`\r\n  font-size: 2rem;\r\n  line-height: 2rem;\r\n  text-align: center;\r\n\r\n  &:after {\r\n    content: \"\";\r\n    display: block;\r\n    position: absolute;\r\n    height: 0.3rem;\r\n    background-color: var(--accent-primary);\r\n    width: 100%;\r\n    border-radius: 0.3rem;\r\n    margin-top: 0.4rem;\r\n  }\r\n\r\n  @media screen and (${({ theme }) => theme.media.medium}) {\r\n    font-size: 1.5rem;\r\n  }\r\n\r\n  @media screen and (${({ theme }) => theme.media.extraSmall}) {\r\n    font-size: 1.2rem;\r\n  }\r\n`;\r\n\r\nexport const PostDescription = styled.div`\r\n  padding-bottom: 3rem;\r\n  text-align: left;\r\n`;\r\n\r\nexport const PostTags = styled.div`\r\n  display: flex;\r\n  align-self: center;\r\n\r\n  .tag {\r\n    background-color: rgba(255, 255, 255, 0.5);\r\n    color: var(--text-secondary);\r\n    text-decoration: none;\r\n    border-radius: 0.3rem;\r\n    margin-right: 0.5em;\r\n    line-height: 1.5em;\r\n    font-size: 0.75rem;\r\n    padding: 0 0.5em;\r\n    cursor: pointer;\r\n  }\r\n`;\r\n\r\nexport const PostCard = styled.article`\r\n  display: flex;\r\n  overflow: hidden;\r\n  flex-direction: row;\r\n  background-color: var(--bg-tertiary);\r\n  line-height: 1.4rem;\r\n  border-radius: 0.3rem;\r\n  width: 100%;\r\n  height: 100%;\r\n  color: var(--text-secondary);\r\n  margin: 0 auto;\r\n  justify-content: center;\r\n  box-shadow: ${({ theme }) => theme.boxShadow};\r\n\r\n  @media screen and (${({ theme }) => theme.media.medium}) {\r\n    flex-direction: column;\r\n  }\r\n`;\r\n","import _ from \"lodash\";\r\nimport React from \"react\";\r\nimport { Link, graphql } from \"gatsby\";\r\nimport { getImage, GatsbyImage, IGatsbyImageData } from \"gatsby-plugin-image\";\r\nimport * as PostCardItems from \"Blog/PostCard\";\r\nimport Pagination from \"Common/Pagination\";\r\nimport { AllPostTitle } from \"Blog/Post\";\r\nimport Layout from \"Layout/Layout\";\r\nimport Tags from \"Common/Tags\";\r\nimport SEO from \"Common/Seo\";\r\n\r\nexport interface AllPostsProps {\r\n  pageContext: IPageContext;\r\n  data: IData;\r\n  location: { pathname: string };\r\n}\r\n\r\ninterface IData {\r\n  allMdx: {\r\n    edges: [\r\n      node: {\r\n        frontmatter: {\r\n          date: string;\r\n          excerpt: string;\r\n          slug: string;\r\n          title: string;\r\n          tags: Array<string>;\r\n          thumbnail: string;\r\n        };\r\n      }\r\n    ];\r\n  };\r\n}\r\n\r\ninterface IPageContext {\r\n  currentPage: number;\r\n  limit: number;\r\n  numPages: number;\r\n  skip: number;\r\n  folder: string;\r\n  tags: Array<object>;\r\n}\r\n\r\nconst AllPosts: React.FC<AllPostsProps> = ({ pageContext, data, location }) => {\r\n  const {\r\n    DescriptionWrapper,\r\n    PostCard,\r\n    PostCardWrapper,\r\n    PostTitle,\r\n    PostDescription,\r\n    PostTags,\r\n    ImageWrapper,\r\n  } = PostCardItems;\r\n\r\n  // Page Route\r\n  const { currentPage, numPages } = pageContext;\r\n  const pagePath =\r\n    currentPage === 1\r\n      ? `${location.pathname}/`.replace(\"//\", \"/\")\r\n      : `${location.pathname}/`\r\n          .replace(`/${currentPage}`, \"/\")\r\n          .replace(\"//\", \"/\");\r\n  const pathPrefix = `${pagePath}tags/`.replace(\"//\", \"/\");\r\n\r\n  // Pagination props\r\n  const isFirst = currentPage === 1;\r\n  const isLast = currentPage === numPages;\r\n  const previous =\r\n    currentPage - 1 === 1 ? `${pagePath}` : `${pagePath}${currentPage - 1}`;\r\n  const next = `${pagePath}${currentPage + 1}`;\r\n  const posts = data.allMdx.edges;\r\n\r\n  return (\r\n    <Layout>\r\n      <main id=\"blog-main\" className=\"container\">\r\n        <AllPostTitle>Blog</AllPostTitle>\r\n        <PostCardWrapper>\r\n          {posts.map((post: any) => (\r\n            <PostCard key={post.node.frontmatter.slug}>\r\n              <ImageWrapper>\r\n                <GatsbyImage\r\n                  image={\r\n                    getImage(\r\n                      post.node.frontmatter.thumbnail\r\n                    ) as IGatsbyImageData\r\n                  }\r\n                  alt={post.node.frontmatter.title}\r\n                  className=\"post-img\"\r\n                />\r\n              </ImageWrapper>\r\n              <DescriptionWrapper>\r\n                <PostTitle>{post.node.frontmatter.title}</PostTitle>\r\n                <PostDescription>\r\n                  {post.node.frontmatter.excerpt}\r\n                  <br />\r\n                  {post.node.frontmatter.date}\r\n                  <PostTags>\r\n                    {post.node.frontmatter.tags.map(\r\n                      (tag: string, i: number) => (\r\n                        <Link\r\n                          key={i}\r\n                          className=\"tag\"\r\n                          to={`${pathPrefix}${_.kebabCase(tag.toLowerCase())}`}\r\n                        >\r\n                          {tag}\r\n                        </Link>\r\n                      )\r\n                    )}\r\n                  </PostTags>\r\n                </PostDescription>\r\n                <Link\r\n                  to={`${pagePath}${post.node.frontmatter.slug}`}\r\n                  className=\"post-link\"\r\n                >\r\n                  Read More\r\n                </Link>\r\n              </DescriptionWrapper>\r\n            </PostCard>\r\n          ))}\r\n        </PostCardWrapper>\r\n        <Tags tags={pageContext.tags} pathPrefix={pathPrefix} />\r\n        <div style={{ flexGrow: 1 }}></div>\r\n        <Pagination\r\n          isFirst={isFirst}\r\n          isLast={isLast}\r\n          previousPage={previous}\r\n          nextPage={next}\r\n        />\r\n      </main>\r\n    </Layout>\r\n  );\r\n};\r\n\r\nexport default AllPosts;\r\n\r\nexport const Head: React.FC<AllPostsProps> = ({ location }) => {\r\n  return <SEO title=\"Blog\" location={location} />;\r\n};\r\n\r\nexport const pageQuery = graphql`\r\n  query AllPosts($skip: Int!, $limit: Int!) {\r\n    allMdx(\r\n      sort: { order: DESC, fields: frontmatter___date }\r\n      filter: { fileAbsolutePath: { regex: \"/(posts)/\" } }\r\n      limit: $limit\r\n      skip: $skip\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            date(formatString: \"MMMM DD, YYYY\")\r\n            excerpt\r\n            slug\r\n            title\r\n            tags\r\n            thumbnail {\r\n              childImageSharp {\r\n                gatsbyImageData(\r\n                  width: 480\r\n                  height: 360\r\n                  placeholder: BLURRED\r\n                  layout: FIXED\r\n                  quality: 100\r\n                )\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"names":["PostCardWrapper","styled","displayName","componentId","_ref","theme","media","large","ImageWrapper","_ref2","medium","DescriptionWrapper","PostTitle","_ref3","_ref4","extraSmall","PostDescription","PostTags","PostCard","_ref5","boxShadow","_ref6","pageContext","data","location","PostCardItems","currentPage","numPages","pagePath","pathname","replace","pathPrefix","isFirst","isLast","previous","next","posts","allMdx","edges","React","Layout","id","className","AllPostTitle","map","post","key","node","frontmatter","slug","GatsbyImage","image","getImage","thumbnail","alt","title","excerpt","date","tags","tag","i","Link","to","_kebabCase","toLowerCase","Tags","style","flexGrow","Pagination","previousPage","nextPage","Head","SEO"],"sourceRoot":""}