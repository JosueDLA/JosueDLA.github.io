{"componentChunkName":"component---src-templates-single-post-tsx","path":"/blog/introduction-to-nodejs","result":{"data":{"current":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Introduction to Node.js\",\n  \"slug\": \"introduction-to-nodejs\",\n  \"date\": \"2020-11-11T00:00:00.000Z\",\n  \"featureImage\": \"introduction-to-node.jpg\",\n  \"excerpt\": \"Node is a open source runtime environment based in the Javascript programming language.\"\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Learning Node.js\"), mdx(\"p\", null, \"Node.js is a cross-platform, open-source, runtime environment for the server layer. Based on the JavaScript programming language; is frequently used for building back-end services such as APIs (Application Programming Interfaces), Node is ideal for building real-time, scalable and data-intensive applications.\"), mdx(\"p\", null, \"Node.js has an event-driven architecture, based on the Google V8 engine.\"), mdx(\"h2\", null, \"Node Module System\"), mdx(\"h3\", null, \"Modules\"), mdx(\"p\", null, \"In Node every file is treated as a module. The local variables of each module are private unless they are explicitly exported.\"), mdx(\"p\", null, \"Using export in Node\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"const url = \\\"http://www.example.com/\\\";\\n\\nfunction log() {\\n  console.log(\\\"test\\\");\\n}\\n\\nmodule.exports.log = log;\\nmodule.exports.url = url;\\n\")), mdx(\"p\", null, \"Loading a module\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"const myModule = require(\\\"./module\\\");\\n\")), mdx(\"h3\", null, \"Events Module\"), mdx(\"p\", null, \"Events are actions performed on the application, such as:\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Click on a button.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Drag an icon.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Key press.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Write on a TextArea\")), mdx(\"p\", null, \"Each event needs a listener funciton, which will be called when the event ocurs.\"), mdx(\"p\", null, \"A callback is a function that is sent as an argument to another function.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"const EventEmitter = require(\\\"events\\\");\\nconst emitter = new EventEmitter();\\n\\n//Register a listener\\nemitter.emit(\\\"messageLogged\\\", function () {\\n  console.log(\\\"Listener called\\\");\\n});\\n\\n//Raise an event\\nemitter.emit(\\\"messageLogged\\\");\\n\")), mdx(\"h2\", null, \"Node Package Manager\"), mdx(\"p\", null, \"GOTO \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"./introduction-to-npm\"\n  }, \"npm-demo\")), mdx(\"h2\", null, \"Express\"), mdx(\"p\", null, \"Express.js is a back-end framework for Node.js.\"), mdx(\"p\", null, \"Install Express\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"> npm i express\\n\")), mdx(\"h3\", null, \"Express Demo\"), mdx(\"p\", null, \"Basic RESTful API with Express and data validation using Joi.\"), mdx(\"p\", null, \"Install Joi\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"> npm i joi\\n\")), mdx(\"h4\", null, \"EndPoints\"), mdx(\"p\", null, mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"GET:\"), \" /api/courses\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"GET:\"), \" /api/courses/:id\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"POST:\"), \" /api/courses\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"PUT:\"), \" /api/courses/1\\n\", mdx(\"strong\", {\n    parentName: \"p\"\n  }, \"DELETE:\"), \" /api/courses/:id\"), mdx(\"h3\", null, \"Environments\"), mdx(\"p\", null, \"We can use the global object \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"process\"), \" to define and detect in what kind on environment we are running. To achieve this, we will need to use environment variables.\"), mdx(\"h4\", null, \"Environment Variables\"), mdx(\"p\", null, \"Environment variables, as the name implies, are variables that descrive your environment; this variables are stored on your system.\"), mdx(\"p\", null, \"In order to set an environment variable we need to use the export command.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"> export KEY=value\\n\")), mdx(\"h4\", null, \"NODE_ENV\"), mdx(\"p\", null, \"NODE_ENV is a environment variable made popular by the Express web server framework, when a node application is run, it can check the value of the environment variable and do different things based on the value.\"), mdx(\"p\", null, \"Print NODE_ENV value:\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"// Option #1\\nconsole.log(`NODE_ENV: ${process.env.NODE_ENV}`);\\n\\n// Option #2\\n// If undefined, it will return development.\\nconsole.log(app.get(\\\"env\\\"));\\n\")), mdx(\"h3\", null, \"Configuration\"), mdx(\"p\", null, \"Node-config organizes hierarchical configurations for your app deployments.\"), mdx(\"p\", null, \"Install node-config\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"npm i config\\n\")), mdx(\"p\", null, \"Node-config allows us to create configuration files and override them depending on the environment we are running.\"), mdx(\"p\", null, \"Configuration file sample\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"{\\n    \\\"name\\\": \\\"My App\\\",\\n    \\\"mail\\\": {\\n        \\\"host\\\": \\\"dev-mail\\\"\\n    }\\n}\\n\")), mdx(\"p\", null, \"Access configuration data\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"console.log(\\\"Application name: \\\" + config.get(\\\"name\\\"));\\nconsole.log(\\\"Mail Server: \\\" + config.get(\\\"mail.host\\\"));\\n\")), mdx(\"h4\", null, \"Sensitive Information\"), mdx(\"p\", null, \"Sensitive information should NOT be included in the configuration files. You can use environment variables instead.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"> export app_password = 123\\n\")), mdx(\"p\", null, \"We use the custom-environment-variables.json file to map our environment variables to our properties.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"(New as of 1.1.0) Some deployment situations rely heavily on environment variables to configure secrets and settings best left out of a codebase. NODE_CONFIG lets you use a JSON string to deal with this, but sometimes simpler, flatter environment variables are better suited.\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"To enable custom environment variables, create a configuration file, config/custom-environment-variables.json (or .yaml or .js or coffee) mapping the environment variable names into your configuration structure. For example:\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"{\\n    \\\"mail\\\": {\\n        \\\"password\\\": \\\"app_password\\\"\\n    }\\n}\\n\")), mdx(\"h3\", null, \"Debugging\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Debug is a tiny debugging utility modelled after Node.js core's debugging technique.\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"> npm i debug\\n\")), mdx(\"p\", null, \"Set global variable\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"> export DEBUG=app:startup\\n\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"debug exposes a function; simply pass this function the name of your module, and it will return a decorated version of console.error for you to pass debug statements to. This will allow you to toggle the debug output for different parts of your module as well as the module as a whole.\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"const startupDebugger = require(\\\"debug\\\")(\\\"app:startup\\\");\\nconst dbDebugger = require(\\\"debug\\\")(\\\"app:db\\\");\\n\\n// Testing degub app:db\\ndbDebugger(\\\"This is a dbDebugger log\\\");\\n\\n// Testing debug app:startup\\nstartupDebugger(\\\"Startup Test...\\\");\\n\")), mdx(\"h3\", null, \"Template Engine\"), mdx(\"p\", null, \"A template engine is a specific type of module that allows us to return HTML.\"), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Pug is a high performance template engine heavily influenced by Haml and implemented with JavaScript for Node.js and browsers. For bug reports, feature requests and questions, open an issue. For discussion join the chat room.\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"> npm i pug\\n\")), mdx(\"blockquote\", null, mdx(\"p\", {\n    parentName: \"blockquote\"\n  }, \"Pug is a clean, whitespace sensitive syntax for writing html.\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-pug\"\n  }, \"html\\n    head\\n        title= title\\n    body\\n        h1= message\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-js\"\n  }, \"res.render(\\\"index\\\", { title: \\\"My App\\\", message: \\\"Hello World\\\" });\\n\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"date":"2020-11-11T00:00:00.000Z","excerpt":"Node is a open source runtime environment based in the Javascript programming language.","slug":"introduction-to-nodejs","title":"Introduction to Node.js","featureImage":{"publicURL":"/static/55551800f9b4b4e09825e8850bac90c8/introduction-to-node.jpg","childImageSharp":{"gatsbyImageData":{"layout":"fixed","backgroundColor":"#282848","images":{"fallback":{"src":"/static/55551800f9b4b4e09825e8850bac90c8/59c6b/introduction-to-node.jpg","srcSet":"/static/55551800f9b4b4e09825e8850bac90c8/59c6b/introduction-to-node.jpg 1200w","sizes":"1200px"},"sources":[{"srcSet":"/static/55551800f9b4b4e09825e8850bac90c8/31cc3/introduction-to-node.webp 1200w","type":"image/webp","sizes":"1200px"}]},"width":1200,"height":628}}}},"id":"c9d6a3f3-8f90-5f0d-a92a-db4e43ff6dd4"},"previous":{"frontmatter":{"title":"Introduction to Webpack","slug":"introduction-to-webpack"}},"next":{"frontmatter":{"title":"Introduction to NPM","slug":"introduction-to-npm"}},"site":{"siteMetadata":{"author":"JosueDLA","description":"Josué de León is a software developer based in Guatemala, he enjoys learning new things and writing about them.","title":"JosueDLA","image":"/home.png","siteUrl":"https://josuedla.github.io"}}},"pageContext":{"id":"c9d6a3f3-8f90-5f0d-a92a-db4e43ff6dd4","previousPost":"b4efc862-a666-5c12-a4a0-83ef1e42be8e","nextPost":"6dea9334-429c-55f5-914e-d47fa4d23244"}},"staticQueryHashes":["4102384782"]}