{"componentChunkName":"component---src-templates-single-post-tsx","path":"/blog/introduction-to-webpack","result":{"data":{"current":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": \"Introduction to Webpack\",\n  \"slug\": \"introduction-to-webpack\",\n  \"date\": \"2021-03-23T00:00:00.000Z\",\n  \"featureImage\": \"introduction-to-webpack.jpg\",\n  \"excerpt\": \"Webpack is an open-source JavaScript module bundler.\",\n  \"tags\": [\"Webpack\", \"JavaScript\", \"Node.js\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"h1\", null, \"Introduction to Webpack with TypeScript\"), mdx(\"p\", null, \"Webpack is an open-source JavaScript module bundler. Made mainly for JavaScript, but it can be used to transform front-end files like HTML, CSS and Images with the corresponding loaders.\"), mdx(\"p\", null, \"Webpack takes the dependencies and generates a graphic of dependencies that allows developers to use a modular approach. It can be used from the command line or configure it with a file called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"webpack.config.js\"), \".\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"> npm i webpack webpack-cli ts-loader -D\\n\")), mdx(\"h2\", null, \"webpack.config.js\"), mdx(\"p\", null, \"This file is used to define rules, plugins etc. for a project \\u2013 webpack can be enhanced with rules that allows developers to customize tasks -.\\nThis file must be in the root directory of our project \\u2013 the same folder as the \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"package.json\"), \" \\u2013 If necessary the path can be changed using the parameter \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"\\u2013config\"), \" when calling webpack via command line.\\n\", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Webpack-config.js\"), \" uses the node module system since this will be the one in charge of reading and bundle our project.\"), mdx(\"h2\", null, \"Basic structure of Webpack.config.js\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"const path = require(\\\"path\\\");\\n\\nmodule.exports = {\\n  entry: \\\"./src/index.ts\\\",\\n  output: {\\n    filename: \\\"app.js\\\",\\n    path: path.resolve(__dirname, \\\"dist\\\"),\\n  },\\n};\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"entry:\"), \" is the main file of our project, this is a relative route based on the location of the webpack.config.js file.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"output:\"), \" this object contains output configuration options of our project.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"filename:\"), \" is the name of the output file.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"path:\"), \" is the absolute path of the directory where we store the output files.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"mode:\"), \" provide the mode configuration - development or production -.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"module:\"), \" defines the way loaders should behave.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"plugins:\"), \" defines the plugins used in the project, allow us to enhance webpack capabilities.\")), mdx(\"h2\", null, \"Webpack-dev-server\"), mdx(\"p\", null, \"Webpack provides a development server called \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"webpack-dev-server\"), \" that can be used as a HTTP server to serve our output files while we develop. It also provides a live reloading capability.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-bash\"\n  }, \"> npm i webpack-dev-server -D\\n\")), mdx(\"h3\", null, \"Package.json\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"//...\\n// webpack < 5\\n\\\"scripts\\\": {\\n  \\\"develop\\\": \\\"webpack-dev-server\\\",\\n  \\\"build\\\": \\\"webpack --config ./webpack.config.js\\\",\\n  \\\"test\\\": \\\"echo \\\\\\\"Error: no test specified\\\\\\\" && exit 1\\\"\\n},\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"//...\\n// webpack >= 5\\n\\\"scripts\\\": {\\n  \\\"develop\\\": \\\"webpack serve\\\",\\n  \\\"build\\\": \\\"webpack --config ./webpack.config.js\\\",\\n  \\\"test\\\": \\\"echo \\\\\\\"Error: no test specified\\\\\\\" && exit 1\\\"\\n},\\n\")), mdx(\"p\", null, mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"Webpack-dev-server\"), \" recompile when changes are made in our code, but it doesn\\u2019t rebuild it by default. To fix this we need to tell \", mdx(\"inlineCode\", {\n    parentName: \"p\"\n  }, \"webpack-dev-server\"), \" where to output thee rebuild code.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"module.exports = {\\n  //...\\n  // webpack < 5\\n  output: {\\n    publicPath: \\\"dist\\\", // Output folder\\n  },\\n};\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"module.exports = {\\n  //...\\n  // webpack >= 5\\n  devServer: {\\n    publicPath: \\\"/\\\",\\n    contentBase: \\\"./dist\\\",\\n    hot: true,\\n  },\\n};\\n\")), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"publicPath:\"), \" The path where the files will be available.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"contentBase:\"), \" Where content will be served.\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"hot:\"), \" enable hot module replacement.\")), mdx(\"h2\", null, \"Resolve: Using ES6 Modules\"), mdx(\"p\", null, \"This option define the way modules are resolve.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"module.exports = {\\n  //...\\n  resolve: {\\n    extensions: [\\\".ts\\\", \\\".js\\\"],\\n  },\\n};\\n\")), mdx(\"h3\", null, \"resolve.alias\"), mdx(\"p\", null, \"creates aliases for import or require, allowing us to import modules easily.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"module.exports = {\\n  //...\\n  resolve: {\\n    alias: {\\n      Utilities: path.resolve(__dirname, \\\"src/utilities/\\\"),\\n      Template: path.resolve(__dirname, \\\"src/templates/\\\"),\\n    },\\n  },\\n};\\n\")), mdx(\"p\", null, \"Now instead of importing using relative routes, we can do it using the aliases.\"), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"import Utility from \\\"../../utilities/utility\\\";\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"import Utility from \\\"Utilities/utility\\\";\\n\")), mdx(\"h2\", null, \"Source Maps\"), mdx(\"p\", null, \"Source maps is a file that maps the source-code with the webpack compiled code, allowing developers to easily debug.\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"strong\", {\n    parentName: \"li\"\n  }, \"devtool:\"), \" this option controls if a source-map file is generated.\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-javascript\"\n  }, \"module.exports = {\\n  devtool: \\\"eval-source-map\\\",\\n  //...\\n};\\n\")), mdx(\"pre\", null, mdx(\"code\", {\n    parentName: \"pre\",\n    \"className\": \"language-json\"\n  }, \"//tsconfig.json\\n//...\\n\\\"sourceMap\\\": true,\\n\")), mdx(\"p\", null, \"You can learn more about the devtools options \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"https://webpack.js.org/configuration/devtool/\"\n  }, \"here\"), \".\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"date":"2021-03-23T00:00:00.000Z","excerpt":"Webpack is an open-source JavaScript module bundler.","slug":"introduction-to-webpack","title":"Introduction to Webpack","featureImage":{"publicURL":"/static/0eff335635ca41f0e2a1ce646d845ff9/introduction-to-webpack.jpg","childImageSharp":{"gatsbyImageData":{"layout":"fixed","backgroundColor":"#282848","images":{"fallback":{"src":"/static/0eff335635ca41f0e2a1ce646d845ff9/59c6b/introduction-to-webpack.jpg","srcSet":"/static/0eff335635ca41f0e2a1ce646d845ff9/59c6b/introduction-to-webpack.jpg 1200w","sizes":"1200px"},"sources":[{"srcSet":"/static/0eff335635ca41f0e2a1ce646d845ff9/31cc3/introduction-to-webpack.webp 1200w","type":"image/webp","sizes":"1200px"}]},"width":1200,"height":628}}}},"id":"b4efc862-a666-5c12-a4a0-83ef1e42be8e"},"previous":{"frontmatter":{"title":"Introduction to functional programming","slug":"introduction-to-functional-programming"}},"next":{"frontmatter":{"title":"Introduction to Node.js","slug":"introduction-to-nodejs"}},"site":{"siteMetadata":{"author":"JosueDLA","description":"Josué de León is a software developer based in Guatemala, he enjoys learning new things and writing about them.","title":"JosueDLA","image":"/home.png","siteUrl":"https://josuedla.github.io"}}},"pageContext":{"id":"b4efc862-a666-5c12-a4a0-83ef1e42be8e","previousPost":"7fe1b7c1-2c94-5563-ab07-5b2ef88b98b7","nextPost":"c9d6a3f3-8f90-5f0d-a92a-db4e43ff6dd4"}},"staticQueryHashes":["4102384782"]}