{"version":3,"sources":["webpack://josuedla/./src/components/common/Svg.tsx","webpack://josuedla/./src/components/common/Pagination.tsx","webpack://josuedla/./src/images/svg/under-construction.svg","webpack://josuedla/./src/components/Blog/PostCard.tsx","webpack://josuedla/./src/templates/AllPosts.tsx"],"names":["SVGWrapper","styled","text","image","alt","className","src","PaginationWrapper","isFirst","isLast","PaginationElement","Link","previousPage","nextPage","to","PostCardWrapper","ImageWrapper","DescriptionWrapper","PostTitle","PostDescription","PostLink","PostCard","pageContext","data","currentPage","numPages","previous","next","DATE_OPTIONS","weekday","year","month","day","posts","allMdx","edges","filter","post","node","frontmatter","slug","length","Layout","title","map","key","ImageGroup","query","ProjectsImages","filename","excerpt","Date","date","toLocaleDateString","UnderConstructionImg"],"mappings":"uHAIMA,E,KAAaC,sBAAH,uDAAGA,CAAH,2UA2ChB,IAfgC,SAAC,GAAyB,IAAvBC,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,MAAOC,EAAU,EAAVA,IAC9C,OACE,gBAACJ,EAAD,CAAYK,UAAU,aACpB,sBAAIA,UAAU,iBAAiBH,GAC/B,uBAAKI,IAAKH,EAAOE,UAAU,gBAAgBD,IAAKA,O,8GC1BzCG,GAAoBN,QAAO,OAAV,oFAAGA,CAAH,6KAMjB,qBAAGO,QAAyB,MAAQ,UAC3B,qBAAGA,QAAyB,OAAS,UAC7C,qBAAGA,QAAyB,UAAY,aAIzC,qBAAGC,OAAuB,MAAQ,UACzB,qBAAGA,OAAuB,OAAS,UAC3C,qBAAGA,OAAuB,UAAY,aAIvCC,GAAoBT,QAAOU,QAAV,oFAAGV,CAAH,sIAyC9B,EArB8C,SAAC,GAKzC,IAJJO,EAII,EAJJA,QACAC,EAGI,EAHJA,OACAG,EAEI,EAFJA,aACAC,EACI,EADJA,SAEA,OACE,gBAACN,EAAD,CAAmBC,QAASA,EAASC,OAAQA,GAC3C,gBAACC,EAAD,CAAmBI,GAAIF,GAAvB,YACA,gBAACF,EAAD,CAAmBI,GAAID,GAAvB,U,wCCzDN,EAAe,IAA0B,iE,SCE5BE,EAAkBd,wBAAH,qEAAGA,CAAH,wFAQfe,EAAef,oBAAH,kEAAGA,CAAH,oHAcZgB,EAAqBhB,oBAAH,wEAAGA,CAAH,yMAkBlBiB,EAAYjB,mBAAH,+DAAGA,CAAH,mNAiBTkB,EAAkBlB,kBAAH,qEAAGA,CAAH,0CAKfmB,EAAWnB,sBAAH,8DAAGA,CAAH,wKAYRoB,EAAWpB,wBAAH,oDAAGA,CAAH,mTC+ErB,EAtG0C,SAAC,GAA0B,IAAxBqB,EAAwB,EAAxBA,YAAaC,EAAW,EAAXA,KAKhDC,EAA0BF,EAA1BE,YACFhB,EAA0B,IAAhBgB,EACVf,EAASe,IAFmBF,EAAbG,SAGfC,EACJF,EAAc,GAAM,EAApB,mBAAsDA,EAAc,GAChEG,EAAO,UAAcH,EAAc,GAGnCI,EAAsB,CAC1BC,QAAS,QACTC,KAAM,UACNC,MAAO,QACPC,IAAK,WAIDC,EAAQV,EAAKW,OAAOC,MAAMC,QAC9B,SAACC,GAAD,MAA8C,gBAA/BA,EAAKC,KAAKC,YAAYC,QAGvC,OAAIP,EAAMQ,OAAS,EAEf,gBAACC,EAAA,EAAD,KACE,gBAAC,IAAD,CAAKC,MAAM,SACX,wBAAMtC,UAAU,aACd,sCACA,gBAACU,EAAD,KACGkB,EAAMW,KAAI,SAACP,GAAD,OACT,gBAAChB,EAAD,CAAUwB,IAAKR,EAAKC,KAAKC,YAAYC,MACnC,gBAACxB,EAAD,KACE,gBAAC8B,EAAA,EAAD,CACEC,MAAOC,IACPC,SAAS,aACT5C,UAAU,WACVD,IAAI,YAGR,gBAACa,EAAD,KACE,gBAACC,EAAD,KAAYmB,EAAKC,KAAKC,YAAYI,OAClC,gBAACxB,EAAD,KACGkB,EAAKC,KAAKC,YAAYW,QACvB,2BACC,IAAIC,KAAKd,EAAKC,KAAKC,YAAYa,MAAMC,mBACpC,QACAzB,IAGJ,gBAACR,EAAD,kBAAqBiB,EAAKC,KAAKC,YAAYC,YAMnD,gBAAC,EAAD,CACEhC,QAASA,EACTC,OAAQA,EACRG,aAAcc,EACdb,SAAUc,MAOhB,gBAACe,EAAA,EAAD,KACE,gBAAC,IAAD,CAAKC,MAAM,SACX,gBAAC,IAAD,CACEzC,KAAK,0BACLC,MAAOmD,EACPlD,IAAI","file":"component---src-templates-all-posts-tsx-7e8c3ed242334a222e77.js","sourcesContent":["import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nconst SVGWrapper = styled.section`\r\n  display: flex;\r\n  padding: 0;\r\n  text-align: center;\r\n  align-items: center;\r\n  justify-content: center;\r\n  min-height: calc(100vh - 7rem);\r\n  flex-direction: column;\r\n\r\n  .section-title {\r\n    font-size: 2rem;\r\n  }\r\n\r\n  .section-image {\r\n    width: 100%;\r\n    max-width: 600px;\r\n    height: auto;\r\n    filter: drop-shadow(3px 3px 2px rgba(0, 0, 0, 0.7));\r\n    -webkit-filter: drop-shadow(3px 3px 2px rgba(0, 0, 0, 0.7));\r\n  }\r\n`;\r\n\r\nexport interface SVGProps {\r\n  text: string;\r\n  image: any;\r\n  alt?: string;\r\n}\r\n\r\nconst SVG: React.FC<SVGProps> = ({ text, image, alt }) => {\r\n  return (\r\n    <SVGWrapper className=\"container\">\r\n      <h1 className=\"section-title\">{text}</h1>\r\n      <img src={image} className=\"section-image\" alt={alt} />\r\n    </SVGWrapper>\r\n  );\r\n};\r\n\r\nSVG.propTypes = {\r\n  text: PropTypes.string.isRequired,\r\n  image: PropTypes.node.isRequired,\r\n  alt: PropTypes.string,\r\n};\r\n\r\nexport default SVG;\r\n","import React from \"react\";\r\nimport styled from \"styled-components\";\r\nimport { Link } from \"gatsby\";\r\nimport PropTypes from \"prop-types\";\r\n\r\nexport interface IPaginationProps {\r\n  isFirst: boolean;\r\n  isLast: boolean;\r\n}\r\n\r\nexport const PaginationWrapper = styled(\"div\")<IPaginationProps>`\r\n  display: flex;\r\n  align-items: center;\r\n  justify-content: center;\r\n\r\n  a:nth-child(1) {\r\n    color: ${({ isFirst }) => (isFirst ? \"red\" : \"blue\")};\r\n    pointer-events: ${({ isFirst }) => (isFirst ? \"none\" : \"auto\")};\r\n    cursor: ${({ isFirst }) => (isFirst ? \"default\" : \"pointer\")};\r\n  }\r\n\r\n  a:nth-child(2) {\r\n    color: ${({ isLast }) => (isLast ? \"red\" : \"blue\")};\r\n    pointer-events: ${({ isLast }) => (isLast ? \"none\" : \"auto\")};\r\n    cursor: ${({ isLast }) => (isLast ? \"default\" : \"pointer\")};\r\n  }\r\n`;\r\n\r\nexport const PaginationElement = styled(Link)`\r\n  font-size: 1rem;\r\n  line-height: 1.5rem;\r\n  text-decoration: none;\r\n  font-weight: 400;\r\n  margin: 0 2rem;\r\n\r\n  &:hover,\r\n  &:focus {\r\n    text-decoration: underline;\r\n  }\r\n`;\r\n\r\nexport interface PaginationProps {\r\n  isFirst: boolean;\r\n  isLast: boolean;\r\n  previousPage: string;\r\n  nextPage: string;\r\n}\r\n\r\nconst Pagination: React.FC<PaginationProps> = ({\r\n  isFirst,\r\n  isLast,\r\n  previousPage,\r\n  nextPage,\r\n}) => {\r\n  return (\r\n    <PaginationWrapper isFirst={isFirst} isLast={isLast}>\r\n      <PaginationElement to={previousPage}>Previous</PaginationElement>\r\n      <PaginationElement to={nextPage}>Next</PaginationElement>\r\n    </PaginationWrapper>\r\n  );\r\n};\r\n\r\nPagination.propTypes = {\r\n  isFirst: PropTypes.bool.isRequired,\r\n  isLast: PropTypes.bool.isRequired,\r\n  previousPage: PropTypes.string.isRequired,\r\n  nextPage: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default Pagination;\r\n","export default __webpack_public_path__ + \"static/under-construction-cffb655e3927d5781798895a695a2092.svg\";","import styled from \"styled-components\";\r\n\r\nexport const PostCardWrapper = styled.article`\r\n  display: grid;\r\n  padding: 2rem 0;\r\n  align-items: center;\r\n  grid-template-columns: 1fr;\r\n  gap: 2rem;\r\n`;\r\n\r\nexport const ImageWrapper = styled.div`\r\n  flex-basis: 40%;\r\n  width: 100%;\r\n  overflow: hidden;\r\n\r\n  @media (max-width: 640px) {\r\n    height: 15rem;\r\n  }\r\n\r\n  .post-img {\r\n    position: absolute;\r\n  }\r\n`;\r\n\r\nexport const DescriptionWrapper = styled.div`\r\n  flex-basis: 60%;\r\n  position: relative;\r\n  margin: 0 2rem;\r\n\r\n  &:before {\r\n    content: \"\";\r\n    margin-left: -2rem;\r\n    transform: skewX(-3deg);\r\n    background: var(--bg-secondary);\r\n    width: 2rem;\r\n    position: absolute;\r\n    left: -10px;\r\n    top: 0;\r\n    bottom: 0;\r\n  }\r\n`;\r\n\r\nexport const PostTitle = styled.h2`\r\n  font-size: 2rem;\r\n  line-height: 2rem;\r\n  text-align: center;\r\n\r\n  &:after {\r\n    content: \"\";\r\n    display: block;\r\n    position: absolute;\r\n    height: 0.3rem;\r\n    background-color: var(--accent-primary);\r\n    width: 100%;\r\n    border-radius: 0.3rem;\r\n    margin-top: 0.4rem;\r\n  }\r\n`;\r\n\r\nexport const PostDescription = styled.p`\r\n  padding-bottom: 3rem;\r\n  text-align: left;\r\n`;\r\n\r\nexport const PostLink = styled.label`\r\n  text-align: right;\r\n  color: var(--accent-primary);\r\n  display: inline-block;\r\n  position: absolute;\r\n  text-decoration: underline;\r\n  cursor: pointer;\r\n  padding-bottom: 1rem;\r\n  right: 0;\r\n  bottom: 0;\r\n`;\r\n\r\nexport const PostCard = styled.article`\r\n  position: relative;\r\n  display: flex;\r\n  overflow: hidden;\r\n  flex-direction: row;\r\n  background-color: var(--bg-secondary);\r\n  line-height: 1.4rem;\r\n  border-radius: 5px;\r\n  width: 20rem;\r\n  color: var(--text-primary);\r\n  max-width: 60rem;\r\n  max-height: 15rem;\r\n  width: 100%;\r\n  margin: 0 auto;\r\n\r\n  @media (max-width: 640px) {\r\n    flex-direction: column;\r\n    max-height: 25rem;\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport Pagination from \"../components/common/Pagination\";\r\nimport { graphql } from \"gatsby\";\r\nimport Layout from \"../components/Layout/Layout\";\r\nimport ImageGroup from \"../components/common/ImageGroup\";\r\nimport { ProjectsImages } from \"../queries/Projects\";\r\nimport SVG from \"../components/common/Svg\";\r\nimport UnderConstructionImg from \"../images/svg/under-construction.svg\";\r\nimport SEO from \"../components/common/Seo\";\r\nimport {\r\n  DescriptionWrapper,\r\n  ImageWrapper,\r\n  PostCard,\r\n  PostCardWrapper,\r\n  PostLink,\r\n  PostTitle,\r\n  PostDescription,\r\n} from \"../components/Blog/PostCard\";\r\n\r\nexport interface AllPostsProps {\r\n  pageContext: IPageContext;\r\n  data: IData;\r\n}\r\n\r\ninterface IData {\r\n  allMdx: {\r\n    edges: [\r\n      node: {\r\n        frontmatter: {\r\n          date: string;\r\n          excerpt: string;\r\n          slug: string;\r\n          title: string;\r\n        };\r\n      }\r\n    ];\r\n  };\r\n}\r\n\r\ninterface IPageContext {\r\n  currentPage: number;\r\n  limit: number;\r\n  numPages: number;\r\n  skip: number;\r\n}\r\n\r\ninterface IDate {\r\n  weekday?: \"long\" | \"short\" | \"narrow\";\r\n  year?: \"numeric\" | \"2-digit\";\r\n  month?: \"numeric\" | \"2-digit\" | \"long\" | \"short\" | \"narrow\";\r\n  day?: \"numeric\" | \"2-digit\";\r\n}\r\n\r\nconst AllPosts: React.FC<AllPostsProps> = ({ pageContext, data }) => {\r\n  // Page Route\r\n  const pagePath = \"/blog/\";\r\n\r\n  // Pagination props\r\n  const { currentPage, numPages } = pageContext;\r\n  const isFirst = currentPage === 1;\r\n  const isLast = currentPage === numPages;\r\n  const previous =\r\n    currentPage - 1 === 1 ? `${pagePath}` : `${pagePath}${currentPage - 1}`;\r\n  const next = `${pagePath}${currentPage + 1}`;\r\n\r\n  // Date Format\r\n  const DATE_OPTIONS: IDate = {\r\n    weekday: \"short\",\r\n    year: \"numeric\",\r\n    month: \"short\",\r\n    day: \"numeric\",\r\n  };\r\n\r\n  // Remove test blog post\r\n  const posts = data.allMdx.edges.filter(\r\n    (post: any) => post.node.frontmatter.slug !== \"hello-world\"\r\n  );\r\n\r\n  if (posts.length > 0) {\r\n    return (\r\n      <Layout>\r\n        <SEO title=\"Blog\" />\r\n        <main className=\"container\">\r\n          <h1>AllPosts</h1>\r\n          <PostCardWrapper>\r\n            {posts.map((post: any) => (\r\n              <PostCard key={post.node.frontmatter.slug}>\r\n                <ImageWrapper>\r\n                  <ImageGroup\r\n                    query={ProjectsImages}\r\n                    filename=\"django.png\"\r\n                    className=\"post-img\"\r\n                    alt=\"Server\"\r\n                  />\r\n                </ImageWrapper>\r\n                <DescriptionWrapper>\r\n                  <PostTitle>{post.node.frontmatter.title}</PostTitle>\r\n                  <PostDescription>\r\n                    {post.node.frontmatter.excerpt}\r\n                    <br />\r\n                    {new Date(post.node.frontmatter.date).toLocaleDateString(\r\n                      \"en-US\",\r\n                      DATE_OPTIONS\r\n                    )}\r\n                  </PostDescription>\r\n                  <PostLink>Read More {post.node.frontmatter.slug}</PostLink>\r\n                </DescriptionWrapper>\r\n              </PostCard>\r\n            ))}\r\n          </PostCardWrapper>\r\n\r\n          <Pagination\r\n            isFirst={isFirst}\r\n            isLast={isLast}\r\n            previousPage={previous}\r\n            nextPage={next}\r\n          />\r\n        </main>\r\n      </Layout>\r\n    );\r\n  } else {\r\n    return (\r\n      <Layout>\r\n        <SEO title=\"Blog\" />\r\n        <SVG\r\n          text=\"Blog Under Construction\"\r\n          image={UnderConstructionImg}\r\n          alt=\"Web Construction\"\r\n        />\r\n      </Layout>\r\n    );\r\n  }\r\n};\r\n\r\nexport const pageQuery = graphql`\r\n  query AllPosts($skip: Int!, $limit: Int!) {\r\n    allMdx(\r\n      sort: { order: DESC, fields: frontmatter___date }\r\n      limit: $limit\r\n      skip: $skip\r\n    ) {\r\n      edges {\r\n        node {\r\n          frontmatter {\r\n            date\r\n            excerpt\r\n            slug\r\n            title\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`;\r\n\r\nexport default AllPosts;\r\n"],"sourceRoot":""}